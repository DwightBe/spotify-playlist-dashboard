{"ast":null,"code":"var _jsxFileName = \"/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    /*if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    */\n\n    this.getNowPlaying = token => {\n      fetch(\"https://api.spotify.com/v1/me/player\").then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        console.log(JSON.stringify(myJson));\n      });\n      fetch(\"https://api.spotify.com/v1/me/player\", {\n        method: \"GET\",\n        body: JSON.stringify(data),\n        // data can be `string` or {object}!\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => res.json()).then(response => console.log(\"Success:\", JSON.stringify(response))).catch(error => console.error(\"Error:\", error));\n      $.ajax({\n        url: \"https://api.spotify.com/v1/me/player\",\n        type: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token\n        },\n        success: data => {\n          console.log(\"data\", data);\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms\n          });\n        }\n      });\n    };\n\n    this.state = {\n      token: null,\n      loggedIn: false,\n      nowPlaying: {\n        name: \"Not Checked\",\n        albumArt: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Set token\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      // Set token\n      this.setState({\n        token\n      });\n      this.getNowPlaying(token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), this.state.loggedIn && React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Check Now Playing\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/App.js"],"names":["React","Component","App","constructor","getNowPlaying","token","fetch","then","response","json","myJson","console","log","JSON","stringify","method","body","data","headers","Authorization","res","catch","error","$","ajax","url","type","success","setState","item","is_playing","progress_ms","state","loggedIn","nowPlaying","name","albumArt","componentDidMount","params","getHashParams","access_token","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    /*if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    */\n    this.state = {\n      token: null,\n      loggedIn: false,\n      nowPlaying: { name: \"Not Checked\", albumArt: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    // Set token\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      // Set token\n      this.setState({\n        token\n      });\n      this.getNowPlaying(token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying = token => {\n    fetch(\"https://api.spotify.com/v1/me/player\")\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(myJson) {\n        console.log(JSON.stringify(myJson));\n      });\n    fetch(\"https://api.spotify.com/v1/me/player\", {\n      method: \"GET\",\n      body: JSON.stringify(data), // data can be `string` or {object}!\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    })\n      .then(res => res.json())\n      .then(response => console.log(\"Success:\", JSON.stringify(response)))\n      .catch(error => console.error(\"Error:\", error));\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      },\n      success: data => {\n        console.log(\"data\", data);\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <a href=\"http://localhost:8888\"> Login to Spotify </a>\n        <div>Now Playing: {this.state.nowPlaying.name}</div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }} />\n        </div>\n        {this.state.loggedIn && (\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}