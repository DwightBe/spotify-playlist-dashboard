{"ast":null,"code":"var _jsxFileName = \"/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/Pages/Playlist/index.js\";\nimport React, { Component } from \"react\";\n\nclass Playlist extends Component {\n  constructor(props) {\n    super();\n\n    this.getPlaylist = token => {\n      fetch(\"https://api.spotify.com/v1/me/playlists\", {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => res.json()).then(response => {\n        console.log(response);\n        this.setState({\n          items: response.items\n        });\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    const items = props.items,\n          match = props.match,\n          _token = props.token;\n    let item;\n    item = items.filter(item => match.params.playlistId === item.id)[0];\n    this.state = {\n      item,\n      token: _token\n    };\n  }\n\n  componentDidMount() {\n    this.getPlaylist(this.state.token);\n  }\n\n  render() {\n    const item = this.state.item;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, item && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, item.name), React.createElement(\"img\", {\n      src: item.images[0].url,\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/Pages/Playlist/index.js"],"names":["React","Component","Playlist","constructor","props","getPlaylist","token","fetch","method","headers","Authorization","then","res","json","response","console","log","setState","items","catch","error","match","item","filter","params","playlistId","id","state","componentDidMount","render","name","images","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAanBC,WAbmB,GAaLC,KAAK,IAAI;AACrBC,MAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC/CC,QAAAA,MAAM,EAAE,KADuC;AAE/CC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYJ;AADpB;AAFsC,OAA5C,CAAL,CAMGK,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOGF,IAPH,CAOQG,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKG,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAEJ,QAAQ,CAACI;AADJ,SAAd;AAGD,OAZH,EAaGC,KAbH,CAaSC,KAAK,IAAIL,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAblB;AAcD,KA5BkB;;AAAA,UAETF,KAFS,GAEed,KAFf,CAETc,KAFS;AAAA,UAEFG,KAFE,GAEejB,KAFf,CAEFiB,KAFE;AAAA,UAEKf,MAFL,GAEeF,KAFf,CAEKE,KAFL;AAGjB,QAAIgB,IAAJ;AACAA,IAAAA,IAAI,GAAGJ,KAAK,CAACK,MAAN,CAAaD,IAAI,IAAID,KAAK,CAACG,MAAN,CAAaC,UAAb,KAA4BH,IAAI,CAACI,EAAtD,EAA0D,CAA1D,CAAP;AACA,SAAKC,KAAL,GAAa;AACXL,MAAAA,IADW;AAEXhB,MAAAA,KAAK,EAALA;AAFW,KAAb;AAID;;AACDsB,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,WAAL,CAAiB,KAAKsB,KAAL,CAAWrB,KAA5B;AACD;;AAiBDuB,EAAAA,MAAM,GAAG;AAAA,UACCP,IADD,GACU,KAAKK,KADf,CACCL,IADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACQ,IAAV,CADF,EAEE;AAAK,MAAA,GAAG,EAAER,IAAI,CAACS,MAAL,CAAY,CAAZ,EAAeC,GAAzB;AAA8B,MAAA,MAAM,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ,CADF;AAUD;;AA1C8B;;AA6CjC,eAAe9B,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Playlist extends Component {\n  constructor(props) {\n    super();\n    const { items, match, token } = props;\n    let item;\n    item = items.filter(item => match.params.playlistId === item.id)[0];\n    this.state = {\n      item,\n      token\n    };\n  }\n  componentDidMount() {\n    this.getPlaylist(this.state.token);\n  }\n  getPlaylist = token => {\n    fetch(\"https://api.spotify.com/v1/me/playlists\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        console.log(response);\n        this.setState({\n          items: response.items\n        });\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n  render() {\n    const { item } = this.state;\n    return (\n      <div>\n        {item && (\n          <div>\n            <h1>{item.name}</h1>\n            <img src={item.images[0].url} height=\"200\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}