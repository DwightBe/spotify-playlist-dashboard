{"ast":null,"code":"var _jsxFileName = \"/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport v4 from \"uuid\";\nimport styled from \"styled-components\";\nimport Playlist from \"./Pages/Playlist\";\nimport \"./App.css\";\n\nconst Home = ({\n  items\n}) => {\n  console.log(\"item\", items[0].owner);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" 's Playlists \"), item && items.map((item, i) => React.createElement(\"div\", {\n    key: v4(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.images[0].url,\n    height: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/playlist/\".concat(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, item.name))));\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getPlaylists = token => {\n      fetch(\"https://api.spotify.com/v1/me/playlists\", {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => res.json()).then(response => {\n        console.log(response);\n        this.setState({\n          items: response.items\n        });\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.state = {\n      token: null,\n      loggedIn: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    // Set token\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      // Set token\n      this.setState({\n        token,\n        loggedIn: true\n      });\n      this.getPlaylists(token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          loggedIn = _this$state.loggedIn,\n          token = _this$state.token;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, !loggedIn && React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Login to Spotify \"), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: () => React.createElement(Home, {\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/playlist/:playlistId\",\n      component: props => React.createElement(Playlist, Object.assign({}, props, {\n        items: items,\n        token: token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","v4","styled","Playlist","Home","items","console","log","owner","item","map","i","images","url","id","name","App","constructor","getPlaylists","token","fetch","method","headers","Authorization","then","res","json","response","setState","catch","error","state","loggedIn","componentDidMount","params","getHashParams","access_token","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport v4 from \"uuid\";\nimport styled from \"styled-components\";\nimport Playlist from \"./Pages/Playlist\";\nimport \"./App.css\";\n\nconst Home = ({ items }) => {\n  console.log(\"item\", items[0].owner);\n  return (\n    <div>\n      <h1> 's Playlists </h1>\n      {item &&\n        items.map((item, i) => (\n          <div key={v4()}>\n            <img src={item.images[0].url} height=\"100\" />\n            <Link to={`/playlist/${item.id}`}>{item.name}</Link>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      token: null,\n      loggedIn: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    // Set token\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      // Set token\n      this.setState({\n        token,\n        loggedIn: true\n      });\n      this.getPlaylists(token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n  getPlaylists = token => {\n    fetch(\"https://api.spotify.com/v1/me/playlists\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        console.log(response);\n        this.setState({\n          items: response.items\n        });\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n  render() {\n    const { items, loggedIn, token } = this.state;\n    return (\n      <Router>\n        <div>\n          {!loggedIn && <a href=\"http://localhost:8888\"> Login to Spotify </a>}\n          <Route exact path=\"/\" component={() => <Home items={items} />} />\n          <Route\n            path={\"/playlist/:playlistId\"}\n            component={props => (\n              <Playlist {...props} items={items} token={token} />\n            )}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}