{"ast":null,"code":"import _taggedTemplateLiteral from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/Pages/Playlist/index.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  font-weight: bold;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  text-align: left;\\n  li {\\n    line-height: 40px;\\n    width: 400px;\\n    display: flex;\\n    justify-content: space-evenly;\\n  }\\n  button {\\n    background: transparent;\\n    border: none;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 0 auto;\\n  color: white;\\n  padding: 1em 2em;\\n  width: 400px;\\n  text-align: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport v4 from \"uuid\";\nconst SinglePlaylistItem = styled.div(_templateObject());\nconst PlaylistTracks = styled.ul(_templateObject2());\nconst TrackName = styled.span(_templateObject3());\n\nclass Playlist extends Component {\n  constructor(props) {\n    super();\n\n    this.getPlaylist = () => {\n      const _this$state = this.state,\n            token = _this$state.token,\n            playlistId = _this$state.playlistId;\n      fetch(\"https://api.spotify.com/v1/playlists/\".concat(playlistId), {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => res.json()).then(response => {\n        console.log(response);\n        this.setState({\n          tracks: response.tracks.items\n        });\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.deleteTrack = e => {\n      let id = e.target.id;\n      let index = e.target.value;\n      const _this$state2 = this.state,\n            token = _this$state2.token,\n            playlistId = _this$state2.playlistId;\n      fetch(\"https://api.spotify.com/v1/playlists/\".concat(playlistId, \"/tracks\"), {\n        method: \"DELETE\",\n        headers: {\n          Authorization: \"Bearer \" + token\n        },\n        body: JSON.stringify({\n          tracks: [{\n            uri: \"spotify:track:\".concat(id),\n            positions: [parseInt(index)]\n          }]\n        })\n      }).then(res => res.json()).then(response => {\n        this.getPlaylist();\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    const items = props.items,\n          match = props.match,\n          _token = props.token;\n    let item;\n    item = items.filter(item => match.params.playlistId === item.id)[0];\n    this.state = {\n      tracks: null,\n      playlistId: match.params.playlistId,\n      item,\n      token: _token\n    };\n  }\n\n  componentDidMount() {\n    this.getPlaylist();\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          item = _this$state3.item,\n          tracks = _this$state3.tracks;\n    return React.createElement(SinglePlaylistItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, item && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, item.name), React.createElement(\"img\", {\n      src: item.images[0].url,\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(PlaylistTracks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, tracks && tracks.map((track, idx) => React.createElement(\"li\", {\n      key: v4(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TrackName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, track.track.name), \" -\", \" \", track.track.artists[0].name, React.createElement(\"button\", {\n      id: track.track.id,\n      value: idx,\n      onClick: this.deleteTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"-\"))))));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/dwightbenignus/Documents/Dev/react-spotify-playlist-dashboard/client/src/Pages/Playlist/index.js"],"names":["React","Component","styled","v4","SinglePlaylistItem","div","PlaylistTracks","ul","TrackName","span","Playlist","constructor","props","getPlaylist","state","token","playlistId","fetch","method","headers","Authorization","then","res","json","response","console","log","setState","tracks","items","catch","error","deleteTrack","e","id","target","index","value","body","JSON","stringify","uri","positions","parseInt","match","item","filter","params","componentDidMount","render","name","images","url","map","track","idx","artists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport v4 from \"uuid\";\n\nconst SinglePlaylistItem = styled.div`\n  margin: 0 auto;\n  color: white;\n  padding: 1em 2em;\n  width: 400px;\n  text-align: center;\n`;\n\nconst PlaylistTracks = styled.ul`\n  text-align: left;\n  li {\n    line-height: 40px;\n    width: 400px;\n    display: flex;\n    justify-content: space-evenly;\n  }\n  button {\n    background: transparent;\n    border: none;\n  }\n`;\n\nconst TrackName = styled.span`\n  font-weight: bold;\n`;\n\nclass Playlist extends Component {\n  constructor(props) {\n    super();\n    const { items, match, token } = props;\n    let item;\n    item = items.filter(item => match.params.playlistId === item.id)[0];\n    this.state = {\n      tracks: null,\n      playlistId: match.params.playlistId,\n      item,\n      token\n    };\n  }\n  componentDidMount() {\n    this.getPlaylist();\n  }\n  getPlaylist = () => {\n    const { token, playlistId } = this.state;\n    fetch(`https://api.spotify.com/v1/playlists/${playlistId}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        console.log(response);\n        this.setState({\n          tracks: response.tracks.items\n        });\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  deleteTrack = e => {\n    let id = e.target.id;\n    let index = e.target.value;\n    const { token, playlistId } = this.state;\n    fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + token\n      },\n      body: JSON.stringify({\n        tracks: [\n          {\n            uri: `spotify:track:${id}`,\n            positions: [parseInt(index)]\n          }\n        ]\n      })\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.getPlaylist();\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  render() {\n    const { item, tracks } = this.state;\n    return (\n      <SinglePlaylistItem>\n        {item && (\n          <div>\n            <h1>{item.name}</h1>\n            <img src={item.images[0].url} height=\"200\" />\n            <PlaylistTracks>\n              {tracks &&\n                tracks.map((track, idx) => (\n                  <li key={v4()}>\n                    <TrackName>{track.track.name}</TrackName> -{\" \"}\n                    {track.track.artists[0].name}\n                    <button\n                      id={track.track.id}\n                      value={idx}\n                      onClick={this.deleteTrack}\n                    >\n                      -\n                    </button>\n                  </li>\n                ))}\n            </PlaylistTracks>\n          </div>\n        )}\n      </SinglePlaylistItem>\n    );\n  }\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}